<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
			http://www.springframework.org/schema/beans/spring-beans-4.1.xsd">

<!-- 获取spring上下文 -->
    <bean class="com.uclee.model.SpringContextUtil" id ="springContextUtil" />
    
	<!-- 传图片线程池 -->
	<bean id="threadPoolTaskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">

		<!-- 核心线程数，默认为1 -->
		<property name="corePoolSize" value="10" />

		<!-- 最大线程数，默认为Integer.MAX_VALUE -->
		<property name="maxPoolSize" value="500" />

		<!-- 队列最大长度，一般需要设置值>=notifyScheduledMainExecutor.maxNum；默认为Integer.MAX_VALUE 
			<property name="queueCapacity" value="1000" /> -->

		<!-- 线程池维护线程所允许的空闲时间，默认为60s -->
		<property name="keepAliveSeconds" value="300" />

		<!-- 线程池对拒绝任务（无线程可用）的处理策略，目前只支持AbortPolicy、CallerRunsPolicy；默认为后者 -->
		<property name="rejectedExecutionHandler">
			<!-- AbortPolicy:直接抛出java.util.concurrent.RejectedExecutionException异常 -->
			<!-- CallerRunsPolicy:主线程直接执行该任务，执行完之后尝试添加下一个任务到线程池中，可以有效降低向线程池内添加任务的速度 -->
			<!-- DiscardOldestPolicy:抛弃旧的任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
			<!-- DiscardPolicy:抛弃当前任务、暂不支持；会导致被丢弃的任务无法再次被执行 -->
			<bean class="java.util.concurrent.ThreadPoolExecutor$CallerRunsPolicy" />
		</property>
	</bean>
	
	<!-- cookie tools -->
    <bean class="com.uclee.model.CookieVelocity" id ="cookieVelocity" />
    
	<!-- fastdfs tools -->
    <bean class="com.uclee.fundation.dfs.fastdfs.FDFSFileUpload" id ="fDFSFileUpload" />

	<!-- oss -->
	<bean class="com.uclee.fundation.oss.OssUtil" id ="ossUtil" />

	<!-- <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"> -->
	<bean id="propertyConfig" class="com.uclee.user.util.PropertyPlaceholderConfigurerExt"> 
		<property name="locations">
			<list>
				<value>classpath*:/properties/jdbc.properties</value>
				<value>classpath*:spring-session-redis.properties</value>
				<value>classpath*:application.properties</value>
				<value>classpath*:scribe.properties</value>
				<value>classpath*:db.properties</value>
				<value>classpath*:oss.properties</value>
			</list>
		</property>
		</bean>
	<!-- </bean> -->
	<!-- 
	<context:property-placeholder location="classpath:spring-session-redis.properties" order="2"/>
	 -->
	
</beans>